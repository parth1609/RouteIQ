Generate a Python file `ticket_router.py` that wraps both zammad  and Zendesk ticket integrations using our fine-tuned LLM classifier. Structure it for immediate deployment.

Requirements:
- Use Hugging Face pipeline to load model from `pipeline("text2text-generation", model="path/to/model")`.
- Expose a function `classify_ticket(body: str) -> dict` returning {"Department","Priority","Tags","Issue"} using a JSON output prompt.
- Add `create_zammad_ticket(customer_email: str, ticket_body: str) -> dict`:
    - Calls `classify_ticket`
    - Maps `Priority` string to Zammad numeric (`High`=3, `Medium`=2, `Low`=1)
    - Posts to Zammad API URL from env vars: `ZAMMAD_URL`, `ZAMMAD_USERNAME`, 'ZAMMAD_HTTP_TOKEN', `ZAMMAD_PASSWORD`
    - Returns the created ticket response JSON
- Add `create_zendesk_ticket(customer_email: str, ticket_body: str) -> dict`:
    - Calls `classify_ticket`
    - Maps `Priority` string to Zendesk priorities (`urgent`, `high`, `normal`, `low`)
    - Posts to Zendesk endpoint from env vars: `ZENDESK_SUBDOMAIN`, `ZENDESK_EMAIL`, `ZENDESK_TOKEN`
    - Returns the created ticket JSON response
- Add helper function `route_ticket(customer_email: str, ticket_body: str, platform: str = "zammad") -> dict` that dispatches to the correct integration
- Include exception handling, logging, and docstrings
- Use `requests` for HTTP calls

import the necessasry function from this files. And write a single system that helps to to run seemlessly.